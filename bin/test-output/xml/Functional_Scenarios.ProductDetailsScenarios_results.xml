<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ProductDetailsScenarios"
           tests="33"
           failures="1"
           errors="0"
           skipped="32"
           time="0.012">
  <properties />
            <testcase name="initializeDrivers" time="0.000" classname="Functional_Scenarios.ProductDetailsScenarios">
                <failure type="java.lang.NoClassDefFoundError"
                  message="Could not initialize class org.apache.http.conn.ssl.SSLConnectionSocketFactory"
              >
<![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.apache.http.conn.ssl.SSLConnectionSocketFactory
  org.openqa.selenium.remote.internal.HttpClientFactory.getClientConnectionManager(HttpClientFactory.java:65)
  org.openqa.selenium.remote.internal.HttpClientFactory.<init>(HttpClientFactory.java:55)
  org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.getDefaultHttpClientFactory(ApacheHttpClient.java:234)
  org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.<init>(ApacheHttpClient.java:211)
  org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactory(HttpCommandExecutor.java:88)
  org.openqa.selenium.remote.HttpCommandExecutor.<init>(HttpCommandExecutor.java:62)
  org.openqa.selenium.remote.HttpCommandExecutor.<init>(HttpCommandExecutor.java:57)
  org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
  io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:109)
  io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:39)
  Functional_Scenarios.BaseTestSanitySuite.initializeDrivers(BaseTestSanitySuite.java:366)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
  java.lang.reflect.Method.invoke(Unknown Source)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
  org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
  org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
  org.testng.TestRunner.privateRun(TestRunner.java:767)
  org.testng.TestRunner.run(TestRunner.java:617)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
  org.testng.SuiteRunner.run(SuiteRunner.java:240)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
  org.testng.TestNG.run(TestNG.java:1057)
  org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
  org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
  org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
      </failure>

          </testcase>
  
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="quitTest" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="initializeDrivers" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="executeTestCase" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="favouritesProducts" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="removeAppliedFilter" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="productWithFilter" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="productEnlargedImage" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="scrollableProductList" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="moreCategoryProductListing" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="exchangeFunctionality" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="sorting" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="productFeaturesDetails" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
            <testcase name="loginCheckForSubmitReview" time="0.0" classname="Functional_Scenarios.ProductDetailsScenarios">
          <skipped />
    </testcase>
  
  
</testsuite>
